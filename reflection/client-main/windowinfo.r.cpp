#include <src/client-main/windowinfo.hpp>
#include <reflection.hpp>
#include <common.hpp>
namespace
{
/*
	src/client-main/windowinfo.hpp:7:2:
	window> Window = class() [[r::external]] [[r::name("window")]]
*/
/*
	src/client-main/windowinfo.hpp:9:2:
	window> WindowInfo = class() [[r::class]] [[r::name("windowinfo")]]
*/
/*
	src/client-main/windowinfo.hpp:11:28:
	window::WindowInfo> window = object pointer Window [[r::field]] [[r::const]]
*/
	extern "C" r::objectbox const r_window_windowinfo_window_accessor(::window::WindowInfo* self)
	{
		return r::maketrivialbox(self->window);
	}
/*
	src/client-main/windowinfo.hpp:12:28:
	window::WindowInfo> acceleratorinput = object bool [[r::field]] [[r::const]]
*/
	extern "C" bool const r_window_windowinfo_acceleratorinput_accessor(::window::WindowInfo* self)
	{
		return self->acceleratorinput;
	}
/*
	src/client-main/windowinfo.hpp:13:28:
	window::WindowInfo> pointinput = object bool [[r::field]] [[r::const]]
*/
	extern "C" bool const r_window_windowinfo_pointinput_accessor(::window::WindowInfo* self)
	{
		return self->pointinput;
	}
/*
	src/client-main/windowinfo.hpp:14:28:
	window::WindowInfo> keyboardinput = object bool [[r::field]] [[r::const]]
*/
	extern "C" bool const r_window_windowinfo_keyboardinput_accessor(::window::WindowInfo* self)
	{
		return self->keyboardinput;
	}
/*
	src/client-main/windowinfo.hpp:15:28:
	window::WindowInfo> silent = object bool [[r::field]] [[r::const]]
*/
	extern "C" bool const r_window_windowinfo_silent_accessor(::window::WindowInfo* self)
	{
		return self->silent;
	}
/*
	src/client-main/windowinfo.hpp:18:28:
	window::WindowInfo> width = object int [[r::field]] [[r::const]]
*/
	extern "C" int const r_window_windowinfo_width_accessor(::window::WindowInfo* self)
	{
		return self->width;
	}
/*
	src/client-main/windowinfo.hpp:19:28:
	window::WindowInfo> height = object int [[r::field]] [[r::const]]
*/
	extern "C" int const r_window_windowinfo_height_accessor(::window::WindowInfo* self)
	{
		return self->height;
	}
/*
	src/client-main/windowinfo.hpp:20:28:
	window::WindowInfo> texelsoffset = object float [[r::field]] [[r::const]]
*/
	extern "C" float const r_window_windowinfo_texelsoffset_accessor(::window::WindowInfo* self)
	{
		return self->texelsoffset;
	}
/*
	src/client-main/windowinfo.hpp:21:28:
	window::WindowInfo> texeltoffset = object float [[r::field]] [[r::const]]
*/
	extern "C" float const r_window_windowinfo_texeltoffset_accessor(::window::WindowInfo* self)
	{
		return self->texeltoffset;
	}
	struct r_ptr_t
	{
/*
	src/client-main/windowinfo.hpp:7:2:
	window> Window = class() [[r::external]] [[r::name("window")]]
*/
/*
	src/client-main/windowinfo.hpp:9:2:
	window> WindowInfo = class() [[r::class]] [[r::name("windowinfo")]]
*/
/*
	src/client-main/windowinfo.hpp:11:28:
	window::WindowInfo> window = object pointer Window [[r::field]] [[r::const]]
*/
		decltype(&r_window_windowinfo_window_accessor) window_windowinfo_window_accessor;
/*
	src/client-main/windowinfo.hpp:12:28:
	window::WindowInfo> acceleratorinput = object bool [[r::field]] [[r::const]]
*/
		decltype(&r_window_windowinfo_acceleratorinput_accessor) window_windowinfo_acceleratorinput_accessor;
/*
	src/client-main/windowinfo.hpp:13:28:
	window::WindowInfo> pointinput = object bool [[r::field]] [[r::const]]
*/
		decltype(&r_window_windowinfo_pointinput_accessor) window_windowinfo_pointinput_accessor;
/*
	src/client-main/windowinfo.hpp:14:28:
	window::WindowInfo> keyboardinput = object bool [[r::field]] [[r::const]]
*/
		decltype(&r_window_windowinfo_keyboardinput_accessor) window_windowinfo_keyboardinput_accessor;
/*
	src/client-main/windowinfo.hpp:15:28:
	window::WindowInfo> silent = object bool [[r::field]] [[r::const]]
*/
		decltype(&r_window_windowinfo_silent_accessor) window_windowinfo_silent_accessor;
/*
	src/client-main/windowinfo.hpp:18:28:
	window::WindowInfo> width = object int [[r::field]] [[r::const]]
*/
		decltype(&r_window_windowinfo_width_accessor) window_windowinfo_width_accessor;
/*
	src/client-main/windowinfo.hpp:19:28:
	window::WindowInfo> height = object int [[r::field]] [[r::const]]
*/
		decltype(&r_window_windowinfo_height_accessor) window_windowinfo_height_accessor;
/*
	src/client-main/windowinfo.hpp:20:28:
	window::WindowInfo> texelsoffset = object float [[r::field]] [[r::const]]
*/
		decltype(&r_window_windowinfo_texelsoffset_accessor) window_windowinfo_texelsoffset_accessor;
/*
	src/client-main/windowinfo.hpp:21:28:
	window::WindowInfo> texeltoffset = object float [[r::field]] [[r::const]]
*/
		decltype(&r_window_windowinfo_texeltoffset_accessor) window_windowinfo_texeltoffset_accessor;
	};
	r_ptr_t r_ptr = {
/*
	src/client-main/windowinfo.hpp:7:2:
	window> Window = class() [[r::external]] [[r::name("window")]]
*/
/*
	src/client-main/windowinfo.hpp:9:2:
	window> WindowInfo = class() [[r::class]] [[r::name("windowinfo")]]
*/
/*
	src/client-main/windowinfo.hpp:11:28:
	window::WindowInfo> window = object pointer Window [[r::field]] [[r::const]]
*/
		&r_window_windowinfo_window_accessor,
/*
	src/client-main/windowinfo.hpp:12:28:
	window::WindowInfo> acceleratorinput = object bool [[r::field]] [[r::const]]
*/
		&r_window_windowinfo_acceleratorinput_accessor,
/*
	src/client-main/windowinfo.hpp:13:28:
	window::WindowInfo> pointinput = object bool [[r::field]] [[r::const]]
*/
		&r_window_windowinfo_pointinput_accessor,
/*
	src/client-main/windowinfo.hpp:14:28:
	window::WindowInfo> keyboardinput = object bool [[r::field]] [[r::const]]
*/
		&r_window_windowinfo_keyboardinput_accessor,
/*
	src/client-main/windowinfo.hpp:15:28:
	window::WindowInfo> silent = object bool [[r::field]] [[r::const]]
*/
		&r_window_windowinfo_silent_accessor,
/*
	src/client-main/windowinfo.hpp:18:28:
	window::WindowInfo> width = object int [[r::field]] [[r::const]]
*/
		&r_window_windowinfo_width_accessor,
/*
	src/client-main/windowinfo.hpp:19:28:
	window::WindowInfo> height = object int [[r::field]] [[r::const]]
*/
		&r_window_windowinfo_height_accessor,
/*
	src/client-main/windowinfo.hpp:20:28:
	window::WindowInfo> texelsoffset = object float [[r::field]] [[r::const]]
*/
		&r_window_windowinfo_texelsoffset_accessor,
/*
	src/client-main/windowinfo.hpp:21:28:
	window::WindowInfo> texeltoffset = object float [[r::field]] [[r::const]]
*/
		&r_window_windowinfo_texeltoffset_accessor,
	};
	uint8_t const r_chunk[] = {
		0x1b, 0x4c, 0x4a, 0x01, 0x00, 0x27, 0x72, 0x65,
		0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
		0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2d,
		0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x77, 0x69, 0x6e,
		0x64, 0x6f, 0x77, 0x69, 0x6e, 0x66, 0x6f, 0x2e,
		0x72, 0x2e, 0x6c, 0x75, 0x61, 0x6d, 0x00, 0x01,
		0x04, 0x02, 0x02, 0x00, 0x06, 0x1d, 0x84, 0x01,
		0x02, 0x2b, 0x01, 0x00, 0x00, 0x2b, 0x02, 0x01,
		0x00, 0x37, 0x02, 0x00, 0x02, 0x37, 0x03, 0x01,
		0x00, 0x3e, 0x02, 0x02, 0x00, 0x3f, 0x01, 0x00,
		0x00, 0x03, 0xc0, 0x06, 0xc0, 0x0b, 0x6f, 0x62,
		0x6a, 0x65, 0x63, 0x74, 0x26, 0x77, 0x69, 0x6e,
		0x64, 0x6f, 0x77, 0x5f, 0x77, 0x69, 0x6e, 0x64,
		0x6f, 0x77, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x77,
		0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x61, 0x63,
		0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x01, 0x01,
		0x01, 0x01, 0x01, 0x01, 0x72, 0x5f, 0x77, 0x72,
		0x61, 0x70, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
		0x00, 0x72, 0x00, 0x73, 0x65, 0x6c, 0x66, 0x00,
		0x00, 0x07, 0x00, 0x5e, 0x00, 0x01, 0x03, 0x01,
		0x02, 0x00, 0x04, 0x0e, 0x8b, 0x01, 0x02, 0x2b,
		0x01, 0x00, 0x00, 0x37, 0x01, 0x00, 0x01, 0x37,
		0x02, 0x01, 0x00, 0x40, 0x01, 0x02, 0x00, 0x06,
		0xc0, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
		0x30, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f,
		0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x69, 0x6e,
		0x66, 0x6f, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x6c,
		0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x69, 0x6e,
		0x70, 0x75, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65,
		0x73, 0x73, 0x6f, 0x72, 0x01, 0x01, 0x01, 0x01,
		0x72, 0x00, 0x73, 0x65, 0x6c, 0x66, 0x00, 0x00,
		0x05, 0x00, 0x58, 0x00, 0x01, 0x03, 0x01, 0x02,
		0x00, 0x04, 0x0e, 0x92, 0x01, 0x02, 0x2b, 0x01,
		0x00, 0x00, 0x37, 0x01, 0x00, 0x01, 0x37, 0x02,
		0x01, 0x00, 0x40, 0x01, 0x02, 0x00, 0x06, 0xc0,
		0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2a,
		0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x77,
		0x69, 0x6e, 0x64, 0x6f, 0x77, 0x69, 0x6e, 0x66,
		0x6f, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x69,
		0x6e, 0x70, 0x75, 0x74, 0x5f, 0x61, 0x63, 0x63,
		0x65, 0x73, 0x73, 0x6f, 0x72, 0x01, 0x01, 0x01,
		0x01, 0x72, 0x00, 0x73, 0x65, 0x6c, 0x66, 0x00,
		0x00, 0x05, 0x00, 0x5b, 0x00, 0x01, 0x03, 0x01,
		0x02, 0x00, 0x04, 0x0e, 0x99, 0x01, 0x02, 0x2b,
		0x01, 0x00, 0x00, 0x37, 0x01, 0x00, 0x01, 0x37,
		0x02, 0x01, 0x00, 0x40, 0x01, 0x02, 0x00, 0x06,
		0xc0, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
		0x2d, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f,
		0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x69, 0x6e,
		0x66, 0x6f, 0x5f, 0x6b, 0x65, 0x79, 0x62, 0x6f,
		0x61, 0x72, 0x64, 0x69, 0x6e, 0x70, 0x75, 0x74,
		0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f,
		0x72, 0x01, 0x01, 0x01, 0x01, 0x72, 0x00, 0x73,
		0x65, 0x6c, 0x66, 0x00, 0x00, 0x05, 0x00, 0x54,
		0x00, 0x01, 0x03, 0x01, 0x02, 0x00, 0x04, 0x0e,
		0xa0, 0x01, 0x02, 0x2b, 0x01, 0x00, 0x00, 0x37,
		0x01, 0x00, 0x01, 0x37, 0x02, 0x01, 0x00, 0x40,
		0x01, 0x02, 0x00, 0x06, 0xc0, 0x0b, 0x6f, 0x62,
		0x6a, 0x65, 0x63, 0x74, 0x26, 0x77, 0x69, 0x6e,
		0x64, 0x6f, 0x77, 0x5f, 0x77, 0x69, 0x6e, 0x64,
		0x6f, 0x77, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73,
		0x69, 0x6c, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63,
		0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x01, 0x01,
		0x01, 0x01, 0x72, 0x00, 0x73, 0x65, 0x6c, 0x66,
		0x00, 0x00, 0x05, 0x00, 0x53, 0x00, 0x01, 0x03,
		0x01, 0x02, 0x00, 0x04, 0x0e, 0xa7, 0x01, 0x02,
		0x2b, 0x01, 0x00, 0x00, 0x37, 0x01, 0x00, 0x01,
		0x37, 0x02, 0x01, 0x00, 0x40, 0x01, 0x02, 0x00,
		0x06, 0xc0, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63,
		0x74, 0x25, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77,
		0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x69,
		0x6e, 0x66, 0x6f, 0x5f, 0x77, 0x69, 0x64, 0x74,
		0x68, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
		0x6f, 0x72, 0x01, 0x01, 0x01, 0x01, 0x72, 0x00,
		0x73, 0x65, 0x6c, 0x66, 0x00, 0x00, 0x05, 0x00,
		0x54, 0x00, 0x01, 0x03, 0x01, 0x02, 0x00, 0x04,
		0x0e, 0xae, 0x01, 0x02, 0x2b, 0x01, 0x00, 0x00,
		0x37, 0x01, 0x00, 0x01, 0x37, 0x02, 0x01, 0x00,
		0x40, 0x01, 0x02, 0x00, 0x06, 0xc0, 0x0b, 0x6f,
		0x62, 0x6a, 0x65, 0x63, 0x74, 0x26, 0x77, 0x69,
		0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x77, 0x69, 0x6e,
		0x64, 0x6f, 0x77, 0x69, 0x6e, 0x66, 0x6f, 0x5f,
		0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x61,
		0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x01,
		0x01, 0x01, 0x01, 0x72, 0x00, 0x73, 0x65, 0x6c,
		0x66, 0x00, 0x00, 0x05, 0x00, 0x5a, 0x00, 0x01,
		0x03, 0x01, 0x02, 0x00, 0x04, 0x0e, 0xb5, 0x01,
		0x02, 0x2b, 0x01, 0x00, 0x00, 0x37, 0x01, 0x00,
		0x01, 0x37, 0x02, 0x01, 0x00, 0x40, 0x01, 0x02,
		0x00, 0x06, 0xc0, 0x0b, 0x6f, 0x62, 0x6a, 0x65,
		0x63, 0x74, 0x2c, 0x77, 0x69, 0x6e, 0x64, 0x6f,
		0x77, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77,
		0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x74, 0x65, 0x78,
		0x65, 0x6c, 0x73, 0x6f, 0x66, 0x66, 0x73, 0x65,
		0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
		0x6f, 0x72, 0x01, 0x01, 0x01, 0x01, 0x72, 0x00,
		0x73, 0x65, 0x6c, 0x66, 0x00, 0x00, 0x05, 0x00,
		0x5a, 0x00, 0x01, 0x03, 0x01, 0x02, 0x00, 0x04,
		0x0e, 0xbc, 0x01, 0x02, 0x2b, 0x01, 0x00, 0x00,
		0x37, 0x01, 0x00, 0x01, 0x37, 0x02, 0x01, 0x00,
		0x40, 0x01, 0x02, 0x00, 0x06, 0xc0, 0x0b, 0x6f,
		0x62, 0x6a, 0x65, 0x63, 0x74, 0x2c, 0x77, 0x69,
		0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x77, 0x69, 0x6e,
		0x64, 0x6f, 0x77, 0x69, 0x6e, 0x66, 0x6f, 0x5f,
		0x74, 0x65, 0x78, 0x65, 0x6c, 0x74, 0x6f, 0x66,
		0x66, 0x73, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63,
		0x65, 0x73, 0x73, 0x6f, 0x72, 0x01, 0x01, 0x01,
		0x01, 0x72, 0x00, 0x73, 0x65, 0x6c, 0x66, 0x00,
		0x00, 0x05, 0x00, 0xcc, 0x0e, 0x03, 0x00, 0x12,
		0x00, 0x2e, 0x00, 0x4d, 0xae, 0x01, 0x00, 0xec,
		0x01, 0x43, 0x00, 0x00, 0x02, 0x34, 0x01, 0x00,
		0x00, 0x25, 0x02, 0x01, 0x00, 0x3e, 0x01, 0x02,
		0x02, 0x34, 0x02, 0x00, 0x00, 0x25, 0x03, 0x02,
		0x00, 0x3e, 0x02, 0x02, 0x02, 0x34, 0x03, 0x00,
		0x00, 0x25, 0x04, 0x03, 0x00, 0x3e, 0x03, 0x02,
		0x02, 0x34, 0x04, 0x00, 0x00, 0x25, 0x05, 0x04,
		0x00, 0x3e, 0x04, 0x02, 0x02, 0x37, 0x05, 0x05,
		0x01, 0x25, 0x06, 0x06, 0x00, 0x25, 0x07, 0x07,
		0x00, 0x25, 0x08, 0x08, 0x00, 0x25, 0x09, 0x06,
		0x00, 0x25, 0x0a, 0x06, 0x00, 0x25, 0x0b, 0x06,
		0x00, 0x25, 0x0c, 0x06, 0x00, 0x25, 0x0d, 0x06,
		0x00, 0x25, 0x0e, 0x06, 0x00, 0x25, 0x0f, 0x06,
		0x00, 0x25, 0x10, 0x06, 0x00, 0x25, 0x11, 0x06,
		0x00, 0x24, 0x06, 0x11, 0x06, 0x3e, 0x05, 0x02,
		0x01, 0x25, 0x05, 0x09, 0x00, 0x25, 0x06, 0x06,
		0x00, 0x25, 0x07, 0x06, 0x00, 0x25, 0x08, 0x0a,
		0x00, 0x25, 0x09, 0x0b, 0x00, 0x25, 0x0a, 0x0c,
		0x00, 0x25, 0x0b, 0x0d, 0x00, 0x25, 0x0c, 0x0e,
		0x00, 0x25, 0x0d, 0x0f, 0x00, 0x25, 0x0e, 0x10,
		0x00, 0x25, 0x0f, 0x11, 0x00, 0x25, 0x10, 0x12,
		0x00, 0x24, 0x05, 0x10, 0x05, 0x37, 0x06, 0x13,
		0x01, 0x10, 0x07, 0x05, 0x00, 0x10, 0x08, 0x00,
		0x00, 0x3e, 0x06, 0x03, 0x02, 0x34, 0x07, 0x14,
		0x00, 0x37, 0x07, 0x15, 0x07, 0x37, 0x07, 0x16,
		0x07, 0x10, 0x08, 0x07, 0x00, 0x37, 0x07, 0x17,
		0x07, 0x25, 0x09, 0x18, 0x00, 0x3e, 0x07, 0x03,
		0x02, 0x25, 0x08, 0x1a, 0x00, 0x3a, 0x08, 0x19,
		0x07, 0x31, 0x08, 0x1c, 0x00, 0x3a, 0x08, 0x1b,
		0x07, 0x31, 0x08, 0x1e, 0x00, 0x3a, 0x08, 0x1d,
		0x07, 0x31, 0x08, 0x20, 0x00, 0x3a, 0x08, 0x1f,
		0x07, 0x31, 0x08, 0x22, 0x00, 0x3a, 0x08, 0x21,
		0x07, 0x31, 0x08, 0x24, 0x00, 0x3a, 0x08, 0x23,
		0x07, 0x31, 0x08, 0x26, 0x00, 0x3a, 0x08, 0x25,
		0x07, 0x31, 0x08, 0x28, 0x00, 0x3a, 0x08, 0x27,
		0x07, 0x31, 0x08, 0x2a, 0x00, 0x3a, 0x08, 0x29,
		0x07, 0x31, 0x08, 0x2c, 0x00, 0x3a, 0x08, 0x2b,
		0x07, 0x10, 0x09, 0x07, 0x00, 0x37, 0x08, 0x2d,
		0x07, 0x3e, 0x08, 0x02, 0x01, 0x30, 0x00, 0x00,
		0x80, 0x47, 0x00, 0x01, 0x00, 0x12, 0x62, 0x75,
		0x69, 0x6c, 0x64, 0x6d, 0x65, 0x74, 0x61, 0x74,
		0x79, 0x70, 0x65, 0x00, 0x14, 0x67, 0x65, 0x74,
		0x74, 0x65, 0x78, 0x65, 0x6c, 0x74, 0x6f, 0x66,
		0x66, 0x73, 0x65, 0x74, 0x00, 0x14, 0x67, 0x65,
		0x74, 0x74, 0x65, 0x78, 0x65, 0x6c, 0x73, 0x6f,
		0x66, 0x66, 0x73, 0x65, 0x74, 0x00, 0x0e, 0x67,
		0x65, 0x74, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
		0x00, 0x0d, 0x67, 0x65, 0x74, 0x77, 0x69, 0x64,
		0x74, 0x68, 0x00, 0x0e, 0x67, 0x65, 0x74, 0x73,
		0x69, 0x6c, 0x65, 0x6e, 0x74, 0x00, 0x15, 0x67,
		0x65, 0x74, 0x6b, 0x65, 0x79, 0x62, 0x6f, 0x61,
		0x72, 0x64, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x00,
		0x12, 0x67, 0x65, 0x74, 0x70, 0x6f, 0x69, 0x6e,
		0x74, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x00, 0x18,
		0x67, 0x65, 0x74, 0x61, 0x63, 0x63, 0x65, 0x6c,
		0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x69, 0x6e,
		0x70, 0x75, 0x74, 0x00, 0x0e, 0x67, 0x65, 0x74,
		0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x1c, 0x72,
		0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f,
		0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x69, 0x6e,
		0x66, 0x6f, 0x5f, 0x62, 0x6f, 0x78, 0x0c, 0x74,
		0x79, 0x70, 0x65, 0x64, 0x65, 0x66, 0x16, 0x77,
		0x69, 0x6e, 0x64, 0x6f, 0x77, 0x2e, 0x77, 0x69,
		0x6e, 0x64, 0x6f, 0x77, 0x69, 0x6e, 0x66, 0x6f,
		0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x19,
		0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69,
		0x6f, 0x6e, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63,
		0x74, 0x62, 0x6f, 0x78, 0x0b, 0x6c, 0x6f, 0x61,
		0x64, 0x65, 0x64, 0x0c, 0x70, 0x61, 0x63, 0x6b,
		0x61, 0x67, 0x65, 0x09, 0x63, 0x61, 0x73, 0x74,
		0x5c, 0x09, 0x09, 0x66, 0x6c, 0x6f, 0x61, 0x74,
		0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x28,
		0x2a, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f,
		0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x69, 0x6e,
		0x66, 0x6f, 0x5f, 0x74, 0x65, 0x78, 0x65, 0x6c,
		0x74, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f,
		0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72,
		0x29, 0x28, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77,
		0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x69,
		0x6e, 0x66, 0x6f, 0x2a, 0x20, 0x73, 0x65, 0x6c,
		0x66, 0x29, 0x3b, 0x0a, 0x09, 0x7d, 0x2a, 0x0a,
		0x58, 0x09, 0x09, 0x66, 0x6c, 0x6f, 0x61, 0x74,
		0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x28,
		0x2a, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f,
		0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x69, 0x6e,
		0x66, 0x6f, 0x5f, 0x74, 0x65, 0x78, 0x65, 0x6c,
		0x73, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f,
		0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72,
		0x29, 0x28, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77,
		0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x69,
		0x6e, 0x66, 0x6f, 0x2a, 0x20, 0x73, 0x65, 0x6c,
		0x66, 0x29, 0x3b, 0x0a, 0x50, 0x09, 0x09, 0x69,
		0x6e, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74,
		0x20, 0x28, 0x2a, 0x77, 0x69, 0x6e, 0x64, 0x6f,
		0x77, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77,
		0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x68, 0x65, 0x69,
		0x67, 0x68, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65,
		0x73, 0x73, 0x6f, 0x72, 0x29, 0x28, 0x77, 0x69,
		0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x77, 0x69, 0x6e,
		0x64, 0x6f, 0x77, 0x69, 0x6e, 0x66, 0x6f, 0x2a,
		0x20, 0x73, 0x65, 0x6c, 0x66, 0x29, 0x3b, 0x0a,
		0x4f, 0x09, 0x09, 0x69, 0x6e, 0x74, 0x20, 0x63,
		0x6f, 0x6e, 0x73, 0x74, 0x20, 0x28, 0x2a, 0x77,
		0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x77, 0x69,
		0x6e, 0x64, 0x6f, 0x77, 0x69, 0x6e, 0x66, 0x6f,
		0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x5f, 0x61,
		0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x29,
		0x28, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f,
		0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x69, 0x6e,
		0x66, 0x6f, 0x2a, 0x20, 0x73, 0x65, 0x6c, 0x66,
		0x29, 0x3b, 0x0a, 0x51, 0x09, 0x09, 0x62, 0x6f,
		0x6f, 0x6c, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74,
		0x20, 0x28, 0x2a, 0x77, 0x69, 0x6e, 0x64, 0x6f,
		0x77, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77,
		0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x69, 0x6c,
		0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65,
		0x73, 0x73, 0x6f, 0x72, 0x29, 0x28, 0x77, 0x69,
		0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x77, 0x69, 0x6e,
		0x64, 0x6f, 0x77, 0x69, 0x6e, 0x66, 0x6f, 0x2a,
		0x20, 0x73, 0x65, 0x6c, 0x66, 0x29, 0x3b, 0x0a,
		0x58, 0x09, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x20,
		0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x28, 0x2a,
		0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x77,
		0x69, 0x6e, 0x64, 0x6f, 0x77, 0x69, 0x6e, 0x66,
		0x6f, 0x5f, 0x6b, 0x65, 0x79, 0x62, 0x6f, 0x61,
		0x72, 0x64, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f,
		0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72,
		0x29, 0x28, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77,
		0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x69,
		0x6e, 0x66, 0x6f, 0x2a, 0x20, 0x73, 0x65, 0x6c,
		0x66, 0x29, 0x3b, 0x0a, 0x55, 0x09, 0x09, 0x62,
		0x6f, 0x6f, 0x6c, 0x20, 0x63, 0x6f, 0x6e, 0x73,
		0x74, 0x20, 0x28, 0x2a, 0x77, 0x69, 0x6e, 0x64,
		0x6f, 0x77, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f,
		0x77, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x70, 0x6f,
		0x69, 0x6e, 0x74, 0x69, 0x6e, 0x70, 0x75, 0x74,
		0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f,
		0x72, 0x29, 0x28, 0x77, 0x69, 0x6e, 0x64, 0x6f,
		0x77, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77,
		0x69, 0x6e, 0x66, 0x6f, 0x2a, 0x20, 0x73, 0x65,
		0x6c, 0x66, 0x29, 0x3b, 0x0a, 0x5b, 0x09, 0x09,
		0x62, 0x6f, 0x6f, 0x6c, 0x20, 0x63, 0x6f, 0x6e,
		0x73, 0x74, 0x20, 0x28, 0x2a, 0x77, 0x69, 0x6e,
		0x64, 0x6f, 0x77, 0x5f, 0x77, 0x69, 0x6e, 0x64,
		0x6f, 0x77, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x61,
		0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74,
		0x6f, 0x72, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f,
		0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72,
		0x29, 0x28, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77,
		0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x69,
		0x6e, 0x66, 0x6f, 0x2a, 0x20, 0x73, 0x65, 0x6c,
		0x66, 0x29, 0x3b, 0x0a, 0x5a, 0x09, 0x09, 0x72,
		0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f,
		0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x62,
		0x6f, 0x78, 0x20, 0x28, 0x2a, 0x77, 0x69, 0x6e,
		0x64, 0x6f, 0x77, 0x5f, 0x77, 0x69, 0x6e, 0x64,
		0x6f, 0x77, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x77,
		0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x61, 0x63,
		0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x29, 0x28,
		0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x77,
		0x69, 0x6e, 0x64, 0x6f, 0x77, 0x69, 0x6e, 0x66,
		0x6f, 0x2a, 0x20, 0x73, 0x65, 0x6c, 0x66, 0x29,
		0x3b, 0x0a, 0x0e, 0x09, 0x73, 0x74, 0x72, 0x75,
		0x63, 0x74, 0x7b, 0x0a, 0xd3, 0x01, 0x09, 0x74,
		0x79, 0x70, 0x65, 0x64, 0x65, 0x66, 0x20, 0x76,
		0x6f, 0x69, 0x64, 0x20, 0x77, 0x69, 0x6e, 0x64,
		0x6f, 0x77, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f,
		0x77, 0x69, 0x6e, 0x66, 0x6f, 0x3b, 0x0a, 0x09,
		0x74, 0x79, 0x70, 0x65, 0x64, 0x65, 0x66, 0x20,
		0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x72,
		0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f,
		0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x69, 0x6e,
		0x66, 0x6f, 0x5f, 0x62, 0x6f, 0x78, 0x20, 0x7b,
		0x0a, 0x09, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x6f,
		0x77, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77,
		0x69, 0x6e, 0x66, 0x6f, 0x2a, 0x20, 0x6f, 0x62,
		0x6a, 0x65, 0x63, 0x74, 0x3b, 0x0a, 0x09, 0x09,
		0x76, 0x6f, 0x69, 0x64, 0x28, 0x2a, 0x63, 0x66,
		0x72, 0x65, 0x65, 0x70, 0x74, 0x72, 0x29, 0x28,
		0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x20, 0x72,
		0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f,
		0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x69, 0x6e,
		0x66, 0x6f, 0x5f, 0x62, 0x6f, 0x78, 0x2a, 0x20,
		0x73, 0x65, 0x6c, 0x66, 0x29, 0x3b, 0x0a, 0x09,
		0x09, 0x76, 0x6f, 0x69, 0x64, 0x2a, 0x20, 0x66,
		0x72, 0x65, 0x65, 0x70, 0x74, 0x72, 0x3b, 0x0a,
		0x09, 0x7d, 0x20, 0x72, 0x5f, 0x77, 0x69, 0x6e,
		0x64, 0x6f, 0x77, 0x5f, 0x77, 0x69, 0x6e, 0x64,
		0x6f, 0x77, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x62,
		0x6f, 0x78, 0x3b, 0x0a, 0x5b, 0x09, 0x74, 0x79,
		0x70, 0x65, 0x64, 0x65, 0x66, 0x20, 0x76, 0x6f,
		0x69, 0x64, 0x20, 0x77, 0x69, 0x6e, 0x64, 0x6f,
		0x77, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77,
		0x3b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x64,
		0x65, 0x66, 0x20, 0x73, 0x74, 0x72, 0x75, 0x63,
		0x74, 0x20, 0x72, 0x5f, 0x77, 0x69, 0x6e, 0x64,
		0x6f, 0x77, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f,
		0x77, 0x5f, 0x62, 0x6f, 0x78, 0x20, 0x72, 0x5f,
		0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x77,
		0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x62, 0x6f,
		0x78, 0x3b, 0x0a, 0x05, 0x09, 0x63, 0x64, 0x65,
		0x66, 0x1c, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63,
		0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x75, 0x6e, 0x77,
		0x72, 0x61, 0x70, 0x6f, 0x62, 0x6a, 0x65, 0x63,
		0x74, 0x1a, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63,
		0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x77, 0x72, 0x61,
		0x70, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x1c,
		0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69,
		0x6f, 0x6e, 0x2e, 0x65, 0x78, 0x63, 0x65, 0x70,
		0x74, 0x69, 0x6f, 0x6e, 0x62, 0x6f, 0x78, 0x08,
		0x66, 0x66, 0x69, 0x0c, 0x72, 0x65, 0x71, 0x75,
		0x69, 0x72, 0x65, 0x01, 0x02, 0x02, 0x02, 0x03,
		0x03, 0x03, 0x04, 0x04, 0x04, 0x05, 0x05, 0x05,
		0x06, 0x07, 0x0d, 0x17, 0x1b, 0x1f, 0x23, 0x27,
		0x2b, 0x2f, 0x33, 0x37, 0x3b, 0x3b, 0x06, 0x3e,
		0x42, 0x46, 0x4b, 0x50, 0x55, 0x5a, 0x5f, 0x64,
		0x69, 0x6e, 0x74, 0x74, 0x75, 0x75, 0x75, 0x75,
		0x7e, 0x7e, 0x7e, 0x7e, 0x7e, 0x7e, 0x7e, 0x7f,
		0x7f, 0x86, 0x84, 0x8d, 0x8b, 0x94, 0x92, 0x9b,
		0x99, 0xa2, 0xa0, 0xa9, 0xa7, 0xb0, 0xae, 0xb7,
		0xb5, 0xbe, 0xbc, 0xc7, 0xc7, 0xc7, 0xc7, 0xc7,
		0x72, 0x70, 0x74, 0x72, 0x00, 0x02, 0x4c, 0x66,
		0x66, 0x69, 0x00, 0x03, 0x49, 0x72, 0x5f, 0x65,
		0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e,
		0x62, 0x6f, 0x78, 0x00, 0x03, 0x46, 0x72, 0x5f,
		0x77, 0x72, 0x61, 0x70, 0x6f, 0x62, 0x6a, 0x65,
		0x63, 0x74, 0x00, 0x03, 0x43, 0x72, 0x5f, 0x75,
		0x6e, 0x77, 0x72, 0x61, 0x70, 0x6f, 0x62, 0x6a,
		0x65, 0x63, 0x74, 0x00, 0x03, 0x40, 0x70, 0x74,
		0x72, 0x74, 0x79, 0x70, 0x65, 0x00, 0x1c, 0x24,
		0x72, 0x00, 0x04, 0x20, 0x77, 0x69, 0x6e, 0x64,
		0x6f, 0x77, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f,
		0x77, 0x69, 0x6e, 0x66, 0x6f, 0x00, 0x07, 0x19,
		0x00, 0x00,	};
}
extern r::module const r_client_main_windowinfo_module;
r::module const r_client_main_windowinfo_module = {
	&r_ptr,
	&r_chunk,
	sizeof( r_chunk ),
	"client-main/windowinfo.r.lua" };
