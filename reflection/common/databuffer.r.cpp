#include <src/common/databuffer.hpp>
#include <reflection.hpp>
#include <common.hpp>
namespace
{
/*
	src/common/databuffer.hpp:7:1:
	> DataBuffer = class(RefObject) [[r::class]] [[r::name("databuffer")]]
*/
/*
	src/common/databuffer.hpp:13:38:
	DataBuffer> m_length = object size_t [[r::field]] [[r::name("length")]]
*/
	extern "C" ::size_t r_databuffer_length_accessor(::DataBuffer* self)
	{
		return self->m_length;
	}
	extern "C" void r_databuffer_length_mutator(::DataBuffer* self, ::size_t value)
	{
		self->m_length = value;
	}
/*
	src/common/databuffer.hpp:14:40:
	DataBuffer> m_capacity = object const size_t [[r::field]] [[r::name("capacity")]]
*/
	extern "C" ::size_t const r_databuffer_capacity_accessor(::DataBuffer* self)
	{
		return self->m_capacity;
	}
/*
	src/common/databuffer.hpp:15:36:
	DataBuffer> m_data = object array [8] uint8_t [[r::field]] [[r::name("data")]]
*/
	extern "C" ::uint8_t* const r_databuffer_data_accessor(::DataBuffer* self)
	{
		return self->m_data;
	}
/*
	src/common/databuffer.hpp:20:25:
	DataBuffer> create = static object function [length: size_t, capacity: size_t, data: pointer const void]: Ref<DataBuffer> [[r::method]]
*/
	extern "C" r::objectbox r_databuffer_create_wrapper(::size_t arg1, ::size_t arg2, void const* arg3, r::exceptionbox* exception)
	{
		try
		{
			return r::makerefbox(::DataBuffer::create(arg1, arg2, arg3));
		}
		catch(std::exception const& e)
		{
			r::exceptionbox::make(exception);
			return r::objectbox{nullptr};
		}
	}
	struct r_ptr_t
	{
/*
	src/common/databuffer.hpp:7:1:
	> DataBuffer = class(RefObject) [[r::class]] [[r::name("databuffer")]]
*/
/*
	src/common/databuffer.hpp:13:38:
	DataBuffer> m_length = object size_t [[r::field]] [[r::name("length")]]
*/
		decltype(&r_databuffer_length_accessor) databuffer_length_accessor;
		decltype(&r_databuffer_length_mutator) databuffer_length_mutator;
/*
	src/common/databuffer.hpp:14:40:
	DataBuffer> m_capacity = object const size_t [[r::field]] [[r::name("capacity")]]
*/
		decltype(&r_databuffer_capacity_accessor) databuffer_capacity_accessor;
/*
	src/common/databuffer.hpp:15:36:
	DataBuffer> m_data = object array [8] uint8_t [[r::field]] [[r::name("data")]]
*/
		decltype(&r_databuffer_data_accessor) databuffer_data_accessor;
/*
	src/common/databuffer.hpp:20:25:
	DataBuffer> create = static object function [length: size_t, capacity: size_t, data: pointer const void]: Ref<DataBuffer> [[r::method]]
*/
		decltype(&r_databuffer_create_wrapper) databuffer_create;
	};
	r_ptr_t r_ptr = {
/*
	src/common/databuffer.hpp:7:1:
	> DataBuffer = class(RefObject) [[r::class]] [[r::name("databuffer")]]
*/
/*
	src/common/databuffer.hpp:13:38:
	DataBuffer> m_length = object size_t [[r::field]] [[r::name("length")]]
*/
		&r_databuffer_length_accessor,
		&r_databuffer_length_mutator,
/*
	src/common/databuffer.hpp:14:40:
	DataBuffer> m_capacity = object const size_t [[r::field]] [[r::name("capacity")]]
*/
		&r_databuffer_capacity_accessor,
/*
	src/common/databuffer.hpp:15:36:
	DataBuffer> m_data = object array [8] uint8_t [[r::field]] [[r::name("data")]]
*/
		&r_databuffer_data_accessor,
/*
	src/common/databuffer.hpp:20:25:
	DataBuffer> create = static object function [length: size_t, capacity: size_t, data: pointer const void]: Ref<DataBuffer> [[r::method]]
*/
		&r_databuffer_create_wrapper,
	};
	uint8_t const r_chunk[] = {
		0x1b, 0x4c, 0x4a, 0x01, 0x00, 0x22, 0x72, 0x65,
		0x66, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
		0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
		0x64, 0x61, 0x74, 0x61, 0x62, 0x75, 0x66, 0x66,
		0x65, 0x72, 0x2e, 0x72, 0x2e, 0x6c, 0x75, 0x61,
		0x4c, 0x00, 0x01, 0x03, 0x01, 0x02, 0x00, 0x04,
		0x0e, 0x4a, 0x02, 0x2b, 0x01, 0x00, 0x00, 0x37,
		0x01, 0x00, 0x01, 0x37, 0x02, 0x01, 0x00, 0x40,
		0x01, 0x02, 0x00, 0x06, 0xc0, 0x0b, 0x6f, 0x62,
		0x6a, 0x65, 0x63, 0x74, 0x1f, 0x64, 0x61, 0x74,
		0x61, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f,
		0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x5f, 0x61,
		0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x01,
		0x01, 0x01, 0x01, 0x72, 0x00, 0x73, 0x65, 0x6c,
		0x66, 0x00, 0x00, 0x05, 0x00, 0x5d, 0x00, 0x02,
		0x05, 0x01, 0x02, 0x00, 0x06, 0x18, 0x4d, 0x02,
		0x2b, 0x02, 0x00, 0x00, 0x37, 0x02, 0x00, 0x02,
		0x37, 0x03, 0x01, 0x00, 0x10, 0x04, 0x01, 0x00,
		0x3e, 0x02, 0x03, 0x01, 0x47, 0x00, 0x01, 0x00,
		0x06, 0xc0, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63,
		0x74, 0x1e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x75,
		0x66, 0x66, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x6e,
		0x67, 0x74, 0x68, 0x5f, 0x6d, 0x75, 0x74, 0x61,
		0x74, 0x6f, 0x72, 0x01, 0x01, 0x01, 0x01, 0x01,
		0x02, 0x72, 0x00, 0x73, 0x65, 0x6c, 0x66, 0x00,
		0x00, 0x07, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x00,
		0x00, 0x07, 0x00, 0x4e, 0x00, 0x01, 0x03, 0x01,
		0x02, 0x00, 0x04, 0x0e, 0x54, 0x02, 0x2b, 0x01,
		0x00, 0x00, 0x37, 0x01, 0x00, 0x01, 0x37, 0x02,
		0x01, 0x00, 0x40, 0x01, 0x02, 0x00, 0x06, 0xc0,
		0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x21,
		0x64, 0x61, 0x74, 0x61, 0x62, 0x75, 0x66, 0x66,
		0x65, 0x72, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63,
		0x69, 0x74, 0x79, 0x5f, 0x61, 0x63, 0x63, 0x65,
		0x73, 0x73, 0x6f, 0x72, 0x01, 0x01, 0x01, 0x01,
		0x72, 0x00, 0x73, 0x65, 0x6c, 0x66, 0x00, 0x00,
		0x05, 0x00, 0x4a, 0x00, 0x01, 0x03, 0x01, 0x02,
		0x00, 0x04, 0x0e, 0x5b, 0x02, 0x2b, 0x01, 0x00,
		0x00, 0x37, 0x01, 0x00, 0x01, 0x37, 0x02, 0x01,
		0x00, 0x40, 0x01, 0x02, 0x00, 0x06, 0xc0, 0x0b,
		0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x1d, 0x64,
		0x61, 0x74, 0x61, 0x62, 0x75, 0x66, 0x66, 0x65,
		0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61,
		0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x01,
		0x01, 0x01, 0x01, 0x72, 0x00, 0x73, 0x65, 0x6c,
		0x66, 0x00, 0x00, 0x05, 0x00, 0xf7, 0x01, 0x00,
		0x04, 0x0a, 0x03, 0x05, 0x00, 0x16, 0x66, 0x62,
		0x07, 0x2b, 0x04, 0x00, 0x00, 0x10, 0x05, 0x04,
		0x00, 0x37, 0x04, 0x00, 0x04, 0x3e, 0x04, 0x02,
		0x02, 0x2b, 0x05, 0x01, 0x00, 0x37, 0x05, 0x01,
		0x05, 0x10, 0x06, 0x01, 0x00, 0x10, 0x07, 0x02,
		0x00, 0x10, 0x08, 0x03, 0x00, 0x10, 0x09, 0x04,
		0x00, 0x3e, 0x05, 0x05, 0x02, 0x37, 0x06, 0x02,
		0x04, 0x0a, 0x06, 0x00, 0x00, 0x54, 0x06, 0x05,
		0x80, 0x34, 0x06, 0x03, 0x00, 0x10, 0x08, 0x04,
		0x00, 0x37, 0x07, 0x04, 0x04, 0x3e, 0x07, 0x02,
		0x00, 0x3d, 0x06, 0x00, 0x01, 0x2b, 0x06, 0x02,
		0x00, 0x10, 0x07, 0x05, 0x00, 0x40, 0x06, 0x02,
		0x00, 0x02, 0xc0, 0x06, 0xc0, 0x03, 0xc0, 0x09,
		0x77, 0x68, 0x61, 0x74, 0x0a, 0x65, 0x72, 0x72,
		0x6f, 0x72, 0x0c, 0x77, 0x68, 0x61, 0x74, 0x70,
		0x74, 0x72, 0x16, 0x64, 0x61, 0x74, 0x61, 0x62,
		0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x72,
		0x65, 0x61, 0x74, 0x65, 0x08, 0x6e, 0x65, 0x77,
		0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02,
		0x02, 0x02, 0x02, 0x03, 0x03, 0x03, 0x04, 0x04,
		0x04, 0x04, 0x04, 0x06, 0x06, 0x06, 0x72, 0x5f,
		0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f,
		0x6e, 0x62, 0x6f, 0x78, 0x00, 0x72, 0x00, 0x72,
		0x5f, 0x77, 0x72, 0x61, 0x70, 0x6f, 0x62, 0x6a,
		0x65, 0x63, 0x74, 0x00, 0x73, 0x65, 0x6c, 0x66,
		0x00, 0x00, 0x17, 0x61, 0x72, 0x67, 0x31, 0x00,
		0x00, 0x17, 0x61, 0x72, 0x67, 0x32, 0x00, 0x00,
		0x17, 0x61, 0x72, 0x67, 0x33, 0x00, 0x00, 0x17,
		0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f,
		0x6e, 0x00, 0x05, 0x12, 0x72, 0x65, 0x73, 0x75,
		0x6c, 0x74, 0x00, 0x07, 0x0b, 0x00, 0x9f, 0x09,
		0x03, 0x00, 0x0c, 0x00, 0x20, 0x00, 0x39, 0x93,
		0x01, 0x00, 0x7f, 0x43, 0x00, 0x00, 0x02, 0x34,
		0x01, 0x00, 0x00, 0x25, 0x02, 0x01, 0x00, 0x3e,
		0x01, 0x02, 0x02, 0x34, 0x02, 0x00, 0x00, 0x25,
		0x03, 0x02, 0x00, 0x3e, 0x02, 0x02, 0x02, 0x34,
		0x03, 0x00, 0x00, 0x25, 0x04, 0x03, 0x00, 0x3e,
		0x03, 0x02, 0x02, 0x34, 0x04, 0x00, 0x00, 0x25,
		0x05, 0x04, 0x00, 0x3e, 0x04, 0x02, 0x02, 0x37,
		0x05, 0x05, 0x01, 0x25, 0x06, 0x06, 0x00, 0x25,
		0x07, 0x07, 0x00, 0x25, 0x08, 0x06, 0x00, 0x25,
		0x09, 0x06, 0x00, 0x25, 0x0a, 0x06, 0x00, 0x25,
		0x0b, 0x06, 0x00, 0x24, 0x06, 0x0b, 0x06, 0x3e,
		0x05, 0x02, 0x01, 0x25, 0x05, 0x08, 0x00, 0x25,
		0x06, 0x06, 0x00, 0x25, 0x07, 0x09, 0x00, 0x25,
		0x08, 0x0a, 0x00, 0x25, 0x09, 0x0b, 0x00, 0x25,
		0x0a, 0x0c, 0x00, 0x24, 0x05, 0x0a, 0x05, 0x37,
		0x06, 0x0d, 0x01, 0x10, 0x07, 0x05, 0x00, 0x10,
		0x08, 0x00, 0x00, 0x3e, 0x06, 0x03, 0x02, 0x34,
		0x07, 0x0e, 0x00, 0x37, 0x07, 0x0f, 0x07, 0x37,
		0x07, 0x10, 0x07, 0x10, 0x08, 0x07, 0x00, 0x37,
		0x07, 0x11, 0x07, 0x25, 0x09, 0x12, 0x00, 0x3e,
		0x07, 0x03, 0x02, 0x25, 0x08, 0x14, 0x00, 0x3a,
		0x08, 0x13, 0x07, 0x31, 0x08, 0x16, 0x00, 0x3a,
		0x08, 0x15, 0x07, 0x31, 0x08, 0x18, 0x00, 0x3a,
		0x08, 0x17, 0x07, 0x31, 0x08, 0x1a, 0x00, 0x3a,
		0x08, 0x19, 0x07, 0x31, 0x08, 0x1c, 0x00, 0x3a,
		0x08, 0x1b, 0x07, 0x31, 0x08, 0x1e, 0x00, 0x3a,
		0x08, 0x1d, 0x07, 0x10, 0x09, 0x07, 0x00, 0x37,
		0x08, 0x1f, 0x07, 0x3e, 0x08, 0x02, 0x01, 0x30,
		0x00, 0x00, 0x80, 0x47, 0x00, 0x01, 0x00, 0x12,
		0x62, 0x75, 0x69, 0x6c, 0x64, 0x6d, 0x65, 0x74,
		0x61, 0x74, 0x79, 0x70, 0x65, 0x00, 0x0b, 0x63,
		0x72, 0x65, 0x61, 0x74, 0x65, 0x00, 0x0c, 0x67,
		0x65, 0x74, 0x64, 0x61, 0x74, 0x61, 0x00, 0x10,
		0x67, 0x65, 0x74, 0x63, 0x61, 0x70, 0x61, 0x63,
		0x69, 0x74, 0x79, 0x00, 0x0e, 0x73, 0x65, 0x74,
		0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x00, 0x0e,
		0x67, 0x65, 0x74, 0x6c, 0x65, 0x6e, 0x67, 0x74,
		0x68, 0x15, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61,
		0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x62,
		0x6f, 0x78, 0x0c, 0x74, 0x79, 0x70, 0x65, 0x64,
		0x65, 0x66, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x62,
		0x75, 0x66, 0x66, 0x65, 0x72, 0x0b, 0x6d, 0x6f,
		0x64, 0x75, 0x6c, 0x65, 0x0e, 0x72, 0x65, 0x66,
		0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x0b, 0x6c,
		0x6f, 0x61, 0x64, 0x65, 0x64, 0x0c, 0x70, 0x61,
		0x63, 0x6b, 0x61, 0x67, 0x65, 0x09, 0x63, 0x61,
		0x73, 0x74, 0x82, 0x01, 0x09, 0x09, 0x72, 0x5f,
		0x64, 0x61, 0x74, 0x61, 0x62, 0x75, 0x66, 0x66,
		0x65, 0x72, 0x5f, 0x62, 0x6f, 0x78, 0x20, 0x28,
		0x2a, 0x64, 0x61, 0x74, 0x61, 0x62, 0x75, 0x66,
		0x66, 0x65, 0x72, 0x5f, 0x63, 0x72, 0x65, 0x61,
		0x74, 0x65, 0x29, 0x28, 0x73, 0x69, 0x7a, 0x65,
		0x5f, 0x74, 0x20, 0x61, 0x72, 0x67, 0x31, 0x2c,
		0x20, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x74, 0x20,
		0x61, 0x72, 0x67, 0x32, 0x2c, 0x20, 0x76, 0x6f,
		0x69, 0x64, 0x20, 0x63, 0x6f, 0x6e, 0x73, 0x74,
		0x2a, 0x20, 0x61, 0x72, 0x67, 0x33, 0x2c, 0x20,
		0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x69,
		0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x63, 0x65, 0x70,
		0x74, 0x69, 0x6f, 0x6e, 0x62, 0x6f, 0x78, 0x2a,
		0x20, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69,
		0x6f, 0x6e, 0x29, 0x3b, 0x0a, 0x09, 0x7d, 0x2a,
		0x0a, 0x45, 0x09, 0x09, 0x75, 0x69, 0x6e, 0x74,
		0x38, 0x5f, 0x74, 0x2a, 0x20, 0x63, 0x6f, 0x6e,
		0x73, 0x74, 0x20, 0x28, 0x2a, 0x64, 0x61, 0x74,
		0x61, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f,
		0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x63, 0x63,
		0x65, 0x73, 0x73, 0x6f, 0x72, 0x29, 0x28, 0x64,
		0x61, 0x74, 0x61, 0x62, 0x75, 0x66, 0x66, 0x65,
		0x72, 0x2a, 0x20, 0x73, 0x65, 0x6c, 0x66, 0x29,
		0x3b, 0x0a, 0x47, 0x09, 0x09, 0x73, 0x69, 0x7a,
		0x65, 0x5f, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x73,
		0x74, 0x20, 0x28, 0x2a, 0x64, 0x61, 0x74, 0x61,
		0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x63,
		0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f,
		0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72,
		0x29, 0x28, 0x64, 0x61, 0x74, 0x61, 0x62, 0x75,
		0x66, 0x66, 0x65, 0x72, 0x2a, 0x20, 0x73, 0x65,
		0x6c, 0x66, 0x29, 0x3b, 0x0a, 0x83, 0x01, 0x09,
		0x09, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x74, 0x20,
		0x28, 0x2a, 0x64, 0x61, 0x74, 0x61, 0x62, 0x75,
		0x66, 0x66, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x6e,
		0x67, 0x74, 0x68, 0x5f, 0x61, 0x63, 0x63, 0x65,
		0x73, 0x73, 0x6f, 0x72, 0x29, 0x28, 0x64, 0x61,
		0x74, 0x61, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72,
		0x2a, 0x20, 0x73, 0x65, 0x6c, 0x66, 0x29, 0x3b,
		0x0a, 0x09, 0x09, 0x76, 0x6f, 0x69, 0x64, 0x28,
		0x2a, 0x64, 0x61, 0x74, 0x61, 0x62, 0x75, 0x66,
		0x66, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x6e, 0x67,
		0x74, 0x68, 0x5f, 0x6d, 0x75, 0x74, 0x61, 0x74,
		0x6f, 0x72, 0x29, 0x28, 0x64, 0x61, 0x74, 0x61,
		0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2a, 0x20,
		0x73, 0x65, 0x6c, 0x66, 0x2c, 0x20, 0x73, 0x69,
		0x7a, 0x65, 0x5f, 0x74, 0x20, 0x76, 0x61, 0x6c,
		0x75, 0x65, 0x29, 0x3b, 0x0a, 0x0e, 0x09, 0x73,
		0x74, 0x72, 0x75, 0x63, 0x74, 0x7b, 0x0a, 0xb0,
		0x01, 0x09, 0x74, 0x79, 0x70, 0x65, 0x64, 0x65,
		0x66, 0x20, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x64,
		0x61, 0x74, 0x61, 0x62, 0x75, 0x66, 0x66, 0x65,
		0x72, 0x3b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65,
		0x64, 0x65, 0x66, 0x20, 0x73, 0x74, 0x72, 0x75,
		0x63, 0x74, 0x20, 0x72, 0x5f, 0x64, 0x61, 0x74,
		0x61, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f,
		0x62, 0x6f, 0x78, 0x20, 0x7b, 0x0a, 0x09, 0x09,
		0x64, 0x61, 0x74, 0x61, 0x62, 0x75, 0x66, 0x66,
		0x65, 0x72, 0x2a, 0x20, 0x6f, 0x62, 0x6a, 0x65,
		0x63, 0x74, 0x3b, 0x0a, 0x09, 0x09, 0x76, 0x6f,
		0x69, 0x64, 0x28, 0x2a, 0x63, 0x66, 0x72, 0x65,
		0x65, 0x70, 0x74, 0x72, 0x29, 0x28, 0x73, 0x74,
		0x72, 0x75, 0x63, 0x74, 0x20, 0x72, 0x5f, 0x64,
		0x61, 0x74, 0x61, 0x62, 0x75, 0x66, 0x66, 0x65,
		0x72, 0x5f, 0x62, 0x6f, 0x78, 0x2a, 0x20, 0x73,
		0x65, 0x6c, 0x66, 0x29, 0x3b, 0x0a, 0x09, 0x09,
		0x76, 0x6f, 0x69, 0x64, 0x2a, 0x20, 0x66, 0x72,
		0x65, 0x65, 0x70, 0x74, 0x72, 0x3b, 0x0a, 0x09,
		0x7d, 0x20, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61,
		0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x62,
		0x6f, 0x78, 0x3b, 0x0a, 0x05, 0x09, 0x63, 0x64,
		0x65, 0x66, 0x1c, 0x72, 0x65, 0x66, 0x6c, 0x65,
		0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x75, 0x6e,
		0x77, 0x72, 0x61, 0x70, 0x6f, 0x62, 0x6a, 0x65,
		0x63, 0x74, 0x1a, 0x72, 0x65, 0x66, 0x6c, 0x65,
		0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x77, 0x72,
		0x61, 0x70, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
		0x1c, 0x72, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74,
		0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x78, 0x63, 0x65,
		0x70, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x6f, 0x78,
		0x08, 0x66, 0x66, 0x69, 0x0c, 0x72, 0x65, 0x71,
		0x75, 0x69, 0x72, 0x65, 0x01, 0x02, 0x02, 0x02,
		0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x05, 0x05,
		0x05, 0x06, 0x07, 0x11, 0x15, 0x19, 0x1d, 0x21,
		0x21, 0x06, 0x24, 0x28, 0x2e, 0x33, 0x38, 0x3e,
		0x3e, 0x3f, 0x3f, 0x3f, 0x3f, 0x44, 0x44, 0x44,
		0x44, 0x44, 0x44, 0x44, 0x45, 0x45, 0x4c, 0x4a,
		0x4f, 0x4d, 0x56, 0x54, 0x5d, 0x5b, 0x69, 0x62,
		0x6e, 0x6e, 0x6e, 0x6e, 0x6e, 0x72, 0x70, 0x74,
		0x72, 0x00, 0x02, 0x38, 0x66, 0x66, 0x69, 0x00,
		0x03, 0x35, 0x72, 0x5f, 0x65, 0x78, 0x63, 0x65,
		0x70, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x6f, 0x78,
		0x00, 0x03, 0x32, 0x72, 0x5f, 0x77, 0x72, 0x61,
		0x70, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x00,
		0x03, 0x2f, 0x72, 0x5f, 0x75, 0x6e, 0x77, 0x72,
		0x61, 0x70, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
		0x00, 0x03, 0x2c, 0x70, 0x74, 0x72, 0x74, 0x79,
		0x70, 0x65, 0x00, 0x10, 0x1c, 0x72, 0x00, 0x04,
		0x18, 0x64, 0x61, 0x74, 0x61, 0x62, 0x75, 0x66,
		0x66, 0x65, 0x72, 0x00, 0x07, 0x11, 0x00, 0x00,	};
}
extern r::module const r_common_databuffer_module;
r::module const r_common_databuffer_module = {
	&r_ptr,
	&r_chunk,
	sizeof( r_chunk ),
	"common/databuffer.r.lua" };
